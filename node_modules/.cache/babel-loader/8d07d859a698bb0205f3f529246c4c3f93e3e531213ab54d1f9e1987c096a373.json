{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TarikOmeragic\\\\.git\\\\udemy-react-course\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport ExpensesList from './ExpensesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2023');\n  let filterInfoText = '2022, 2021 & 2020';\n  if (filteredYear === '2022') {\n    filterInfoText = '2023, 2021 & 2020';\n  } else if (filteredYear === '2021') {\n    filterInfoText = '2023, 2022 & 2020';\n  } else if (filteredYear === '2020') {\n    filterInfoText = '2023, 2022 & 2021';\n  }\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      onChangeFilter: filterChangeHandler,\n      selected: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      expenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"dgRXrwp1OOAuhAZdn1AflYhGCDk=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseFilter","ExpenseItem","ExpensesList","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterInfoText","filterChangeHandler","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","className","children","onChangeFilter","selected","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TarikOmeragic/.git/udemy-react-course/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './Expenses.css';\r\nimport ExpensesList from './ExpensesList';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2023')\r\n    let filterInfoText = '2022, 2021 & 2020'\r\n\r\n    if (filteredYear === '2022') {\r\n        filterInfoText = '2023, 2021 & 2020'\r\n    } else if (filteredYear === '2021') {\r\n        filterInfoText = '2023, 2022 & 2020'\r\n    } else if (filteredYear === '2020') {\r\n        filterInfoText = '2023, 2022 & 2021'\r\n    }\r\n\r\n    function filterChangeHandler(selectedYear) {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpenseFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\r\n            {/* <p>Data for years {filterInfoText} is hidden.</p> */}\r\n            {/* <ExpenseItem \r\n                expense={expenses[0]} /> */}\r\n            {/* <ExpenseItem \r\n                title={props.expenses[0].title}\r\n                amount={props.expenses[0].amount}\r\n                date={props.expenses[0].date} /> */}\r\n            \r\n            {/* CONDITIONAL AND DYNAMIC */}\r\n            {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\r\n            {filteredExpenses.length > 0 && \r\n                filteredExpenses.map((expense, index) => \r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date} />\r\n                )\r\n            } */}\r\n            <ExpensesList expenses={filteredExpenses} />\r\n        </Card>\r\n    );\r\n}\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EACxD,IAAIY,cAAc,GAAG,mBAAmB;EAExC,IAAIF,YAAY,KAAK,MAAM,EAAE;IACzBE,cAAc,GAAG,mBAAmB;EACxC,CAAC,MAAM,IAAIF,YAAY,KAAK,MAAM,EAAE;IAChCE,cAAc,GAAG,mBAAmB;EACxC,CAAC,MAAM,IAAIF,YAAY,KAAK,MAAM,EAAE;IAChCE,cAAc,GAAG,mBAAmB;EACxC;EAEA,SAASC,mBAAmBA,CAACC,YAAY,EAAE;IACvCH,eAAe,CAACG,YAAY,CAAC;EACjC;EAEA,MAAMC,gBAAgB,GAAGP,KAAK,CAACQ,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAI;IACtD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKX,YAAY;EACjE,CAAC,CAAC;EAEF,oBACIJ,OAAA,CAACL,IAAI;IAACqB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACtBjB,OAAA,CAACJ,aAAa;MAACsB,cAAc,EAAEX,mBAAoB;MAACY,QAAQ,EAAEf;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAoB9EvB,OAAA,CAACF,YAAY;MAACY,QAAQ,EAAED;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEf;AAACpB,EAAA,CA9CQF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}