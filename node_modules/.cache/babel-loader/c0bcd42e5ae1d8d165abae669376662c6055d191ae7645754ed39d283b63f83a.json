{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TarikOmeragic\\\\.git\\\\udemy-react-course\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2023');\n\n  // let filterInfoText = '2022, 2021 & 2020'\n  // if (filteredYear === '2022') {\n  //     filterInfoText = '2023, 2021 & 2020'\n  // } else if (filteredYear === '2021') {\n  //     filterInfoText = '2023, 2022 & 2020'\n  // } else if (filteredYear === '2020') {\n  //     filterInfoText = '2023, 2022 & 2021'\n  // }\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      onChangeFilter: filterChangeHandler,\n      selected: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 46\n    }, this) : filteredExpenses.map((expense, index) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"dgRXrwp1OOAuhAZdn1AflYhGCDk=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseFilter","ExpenseItem","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","className","children","onChangeFilter","selected","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","title","amount","id","_c","$RefreshReg$"],"sources":["C:/Users/TarikOmeragic/.git/udemy-react-course/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2023')\r\n\r\n    // let filterInfoText = '2022, 2021 & 2020'\r\n    // if (filteredYear === '2022') {\r\n    //     filterInfoText = '2023, 2021 & 2020'\r\n    // } else if (filteredYear === '2021') {\r\n    //     filterInfoText = '2023, 2022 & 2020'\r\n    // } else if (filteredYear === '2020') {\r\n    //     filterInfoText = '2023, 2022 & 2021'\r\n    // }\r\n\r\n    function filterChangeHandler(selectedYear) {\r\n        setFilteredYear(selectedYear)\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpenseFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\r\n            {/* <p>Data for years {filterInfoText} is hidden.</p> */}\r\n            {/* <ExpenseItem \r\n                expense={expenses[0]} /> */}\r\n            {/* <ExpenseItem \r\n                title={props.expenses[0].title}\r\n                amount={props.expenses[0].amount}\r\n                date={props.expenses[0].date} /> */}\r\n            {filteredExpenses.length === 0 ? <p>No expenses found</p> : \r\n                filteredExpenses.map((expense, index) => \r\n                    <ExpenseItem\r\n                        key={expense.id}\r\n                        title={expense.title}\r\n                        amount={expense.amount}\r\n                        date={expense.date} />\r\n                )\r\n            }\r\n        </Card>\r\n    );\r\n}\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAExD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASW,mBAAmBA,CAACC,YAAY,EAAE;IACvCF,eAAe,CAACE,YAAY,CAAC;EACjC;EAEA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAI;IACtD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EACjE,CAAC,CAAC;EAEF,oBACIJ,OAAA,CAACJ,IAAI;IAACmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACtBhB,OAAA,CAACH,aAAa;MAACoB,cAAc,EAAEX,mBAAoB;MAACY,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAQ7Ed,gBAAgB,CAACe,MAAM,KAAK,CAAC,gBAAGvB,OAAA;MAAAgB,QAAA,EAAG;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACrDd,gBAAgB,CAACgB,GAAG,CAAC,CAACb,OAAO,EAAEc,KAAK,kBAChCzB,OAAA,CAACF,WAAW;MAER4B,KAAK,EAAEf,OAAO,CAACe,KAAM;MACrBC,MAAM,EAAEhB,OAAO,CAACgB,MAAO;MACvBf,IAAI,EAAED,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACiB,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGM,CAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEf;AAACnB,EAAA,CA1CQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}